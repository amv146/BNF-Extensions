{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "C--",
    "patterns": [
        {
            "include": "#terminator"
        },
        {
            "include": "#blockComment"
        },
        {
            "include": "#separator"
        },
        {
            "include": "#operator"
        },
        {
            "include": "#keyword"
        },
        {
            "include": "#function"
        },
        {
            "include": "#comment"
        },
        {
            "include": "#number"
        },
        {
            "include": "#string"
        }
    ],
    "repository": {
        "terminator": {
            "patterns": [
                {
                    "name": "punctuation.terminator",
                    "match": ";"
                }
            ]
        },
        "blockComment": {
            "patterns": [
                {
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block"
                }
            ]
        },
        "separator": {
            "patterns": [
                {
                    "name": "punctuation.separator",
                    "match": "\\,"
                }
            ]
        },
        "operator": {
            "patterns": [
                {
                    "name": "keyword.operator",
                    "match": "\\\\|\\.|=|\\(|\\)|\\{|\\}|\\+|\\-|\\*|\\#|:"
                }
            ]
        },
        "keyword": {
            "patterns": [
                {
                    "name": "keyword.control",
                    "match": "\\b(if|then|else|let|in|function|rec)\\b"
                }
            ]
        },
        "function": {
            "patterns": [
                {
                    "name": "entity.name.function",
                    "match": "\\b(hd|tl|less_equal)\\b"
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "begin": "//",
                    "end": "$",
                    "name": "comment.line.character"
                }
            ]
        },
        "number": {
            "patterns": [
                {
                    "match": "((?:0x[0-9a-fA-F]+)|(?:0b[01]+)|(?:\\d+\\.\\d+)|(?:\\d+))",
                    "name": "constant.numeric"
                }
            ]
        },
        "string": {
            "patterns": [
                {
                    "match": "((?:\"(?:[^\"]|\")*\"))",
                    "name": "string.quoted"
                }
            ]
        }
    },
    "scopeName": "source.205120596"
}