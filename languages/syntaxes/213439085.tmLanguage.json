{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lambda Nat 5",
    "patterns": [
        {
            "include": "#blockComment"
        },
        {
            "include": "#comment"
        },
        {
            "include": "#string"
        },
        {
            "include": "#number"
        },
        {
            "include": "#function"
        },
        {
            "include": "#keyword"
        },
        {
            "include": "#operator"
        },
        {
            "include": "#separator"
        }
    ],
    "repository": {
        "blockComment": {
            "patterns": [
                {
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block"
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "begin": "//",
                    "end": "$",
                    "name": "comment.line.character"
                }
            ]
        },
        "string": {
            "patterns": [
                {
                    "match": "(\"([^\"\\]|\\[sS])*\")|('([^'\\]|\\[sS])*')",
                    "name": "string.quoted"
                }
            ]
        },
        "number": {
            "patterns": [
                {
                    "match": "\\b((?:0x[0-9a-fA-F]+)|(?:0b[01]+)|(?:\\d+\\.\\d+)|(?:\\d+))\\b",
                    "name": "constant.numeric"
                }
            ]
        },
        "function": {
            "patterns": [
                {
                    "name": "entity.name.function",
                    "match": "(\\b(less_equal|hd|tl)\\b)"
                }
            ]
        },
        "keyword": {
            "patterns": [
                {
                    "name": "keyword.control",
                    "match": "(\\b(then|else|let|rec|if|in)\\b)"
                }
            ]
        },
        "operator": {
            "patterns": [
                {
                    "name": "keyword.operator",
                    "match": "(\\\\|\\.|=|\\+|\\-|\\*|\\#|:)"
                }
            ]
        },
        "separator": {
            "patterns": [
                {
                    "name": "punctuation.separator",
                    "match": "(;;)"
                }
            ]
        }
    },
    "scopeName": "source.213439085"
}